import ReactFlow, { type Node, type NodeTypes, type ReactFlowInstance } from 'reactflow';
import 'reactflow/dist/style.css';

import { useState } from 'react';
import { useDrop } from 'react-dnd';

import useNodesStore from '../store/nodes';
import { ALLOWEDDROP, TEXT_NODE_TYPE } from '../constants/constants';
import TextNode from './nodeTypes/TextNode';

const nodeTypes: NodeTypes = {
  [TEXT_NODE_TYPE]: TextNode,
};

function FlowBuilder() {
  const [reactFlowInstance, setReactFlowInstance] = useState<ReactFlowInstance | null>(null);

  const nodes = useNodesStore((state) => state.nodes);
  const edges = useNodesStore((state) => state.edges);

  const addNode = useNodesStore((state) => state.addNode);

  const onNodesChange = useNodesStore((state) => state.onNodesChange);
  const onEdgesChange = useNodesStore((state) => state.onEdgesChange);
  const onConnect = useNodesStore((state) => state.connectEdge);

  const [_, drop] = useDrop(
    () => ({
      accept: ALLOWEDDROP,
      drop: (item: { type: string }, monitor) => {
        if (!reactFlowInstance) {
          return;
        }

        const coords = monitor.getClientOffset();

        if (!coords) {
          console.log('No coords found for drop event');
          return;
        }

        const nodeType = item.type;

        const position = reactFlowInstance?.screenToFlowPosition({
          x: coords.x,
          y: coords.y,
        });

        console.log('Dropped at:', { position, coords });

        const newNode: Node = {
          id: '', // generated by addNode call
          position: position,
          type: nodeType,
          data: { label: `${nodeType} node` },
        };

        addNode(newNode);
      },
    }),
    [reactFlowInstance]
  );

  return (
    <div className="flex-1 h-full">
      <ReactFlow
        ref={drop}
        nodes={nodes}
        edges={edges}
        onNodesChange={onNodesChange}
        onEdgesChange={onEdgesChange}
        onConnect={onConnect}
        nodeTypes={nodeTypes}
        selectNodesOnDrag={false}
        onInit={setReactFlowInstance}
      />
    </div>
  );
}

export default FlowBuilder;
